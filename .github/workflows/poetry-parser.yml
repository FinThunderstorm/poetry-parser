name: Poetry Parser CI

on:
  push:

jobs:
  testBackend:
    runs-on: ubuntu-latest
    env:
      workDir: ./src/poetry-parser/poetry-parser
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.workDir }}
      - name: Run linter
        run: npm run lint
        working-directory: ${{ env.workDir }}
      - name: Run Prettier
        run: npm run prettier:ci
        working-directory: ${{ env.workDir }}
      - name: Run unit tests
        run: npm run test:coverage
        working-directory: ${{ env.workDir }}
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          working-directory: ${{ env.workDir }}

  testFrontend:
    runs-on: ubuntu-latest
    env:
      workDir: ./src/frontend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.workDir }}
      - name: Run linter
        run: npm run lint
        working-directory: ${{ env.workDir }}
      - name: Run Prettier
        run: npm run prettier:ci
        working-directory: ${{ env.workDir }}
      - name: Run tests
        run: npm test
        working-directory: ${{ env.workDir }}
      - name: Run E2E tests
        uses: cypress-io/github-action@v2
        with:
          start: npm run start:ci
          env: host=localhost,port=3000,REACT_APP_BACKEND_API=api/parse
          working-directory: ${{ env.workDir }}
          wait-on: "http://localhost:3000/"

  deploy:
    runs-on: ubuntu-latest
    needs: testBackend
    if: ${{ github.ref == 'refs/heads/master' }}
    env:
      workDir: ./src/poetry-parser
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - run: sam build --use-container
        working-directory: ${{ env.workDir }}
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
        working-directory: ${{ env.workDir }}
